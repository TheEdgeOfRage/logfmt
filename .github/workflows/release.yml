name: Release

on:
  push:
    tags:
      - "*"

jobs:
  build_release:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        goos: [linux, darwin]
        goarch: [amd64, arm64]
    permissions:
      contents: write

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version-file: "go.mod"

    - name: Build
      env:
        GOOS: ${{ matrix.goos }}
        GOARCH: ${{ matrix.goarch }}
      run: |
        go build -ldflags="-s -w" -o logfmt-${{ matrix.goos }}-${{ matrix.goarch }}-${{ github.ref_name }}
      
    - name: Compress with UPX (Linux only)
      if: matrix.goos == 'linux'
      uses: crazy-max/ghaction-upx@v3
      with:
        files: |
          ./logfmt-${{ matrix.goos }}-${{ matrix.goarch }}-${{ github.ref_name }}
        args: --best --lzma

    - name: Upload Build Artifact
      uses: actions/upload-artifact@v4
      with:
        name: logfmt-${{ matrix.goos }}-${{ matrix.goarch }} # Unique name for each artifact
        path: ./logfmt-${{ matrix.goos }}-${{ matrix.goarch }}-${{ github.ref_name }} # Path to the built executable
        retention-days: 1

  create_release:
    runs-on: ubuntu-latest
    needs: build_release
    permissions:
      contents: write

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Download all build artifacts
      uses: actions/download-artifact@v4
      with:
        path: release-artifacts

    - name: Create GitHub Release
      uses: softprops/action-gh-release@v2
      with:
        tag_name: ${{ github.ref_name }}
        name: "Release ${{ github.ref_name }}"
        body: |
          Automated release for tag ${{ github.ref_name }}.
        files: release-artifacts/*/*